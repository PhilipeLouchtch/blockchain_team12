namespace nl.tudelft.blockchain.logistics

/* Do we need this? */
enum ContainerType {
	o BasicContainer
}

enum TruckCapacityType {
	o TWENTY
	o TWENTY_TWENTY
	o FOURTY
}

/* Could be more complex than a true/false flag (different levels of training etc) */
enum AdrTraining {
	o YES
	o NONE
}

enum ContainerDeliveryJobStatus {
	o NEW			/* just created */
	o INMARKET		/* offered on the marketplace */ 
	o CONTRACTED	/* bid accepted & contract with trucker created */
	o DELIVERED		/* delivered & accepted by the destination */
	o EXCEPTION		/* "exception", cancelled, etc */
}

enum ContainerSize {
	o TWENTY
	o FOURTY
}

asset TruckerBidOnContainerJobOffer identified by truckerBidId {
	o String truckerBidId
	
	--> Trucker bidder
	--> ContainerDeliveryJobOffer containerDeliveryJobOffer
	
	/* Use integers for monetary values, we're not an exchange.
	Can always work in "cents" if more precision is required.
	Too bad can't define/use "Money"-like object in CTO */
	o Integer bidAmount
}

/*	The container & it's contents.
	In our prototype, it is limited to describe the general information of the
	container with startpoint: Port of Rotterdam, 
	endpoint: next destination (from R'dam)
*/
asset ContainerInfo identified by containerId {
	/* NOTE: ContainerId is senstive info */
	o String containerId
	
	/* Works for the prototype, but not in a start-to-end logistics scenario */
	--> ContainerGuy owner
	
	o ContainerType containerType
	o ContainerSize containerSize
}

asset ContainerDeliveryJobOffer identified by containerDeliveryJobOfferId {
	/* NOTE: can't use containerId as natural id, don't want to leak containerId */
	o String containerDeliveryJobOfferId 

	/* makes querying easier */
	o String containerGuyId

	/* General container information */
	--> ContainerInfo containerInfo

	/* Job related info */
    o DateTime availableForPickupDateTime /* TODO: either keep using DateTime or use SLOTS */
	o DateTime toBeDeliveredByDateTime

	o String terminalContainerAvailableAt
    o String destination /* prototype: just use "general" destination (city name) */

    o AdrTraining requiredAdrTraining // stricly speaking, this is ContainerInfo level but placing here makes querying easier

	/* Bidding process */
	--> TruckerBidOnContainerJobOffer[] containerBids
	--> TruckerBidOnContainerJobOffer acceptedBid optional

	/* Status */
	o ContainerDeliveryJobStatus status default = "NEW"
	o Boolean canceled default = false
}

/** 
 * Represents an active/accepted job. Idea is that this asset can be used for delivery
 * (can put secret in here after contract-acception etc)
 */
asset ContainerDeliveryJob identified by containerDeliveryJobId {
	o String containerDeliveryJobId

	--> ContainerDeliveryJobOffer jobOffer
	--> Trucker contractedTrucker

	o Exception exception optional
	o ContainerDeliveryJobStatus status

	/* Copies from the job offer to make querying for conflicting jobs easier */
	o DateTime availableForPickupDateTime /* TODO: either keep using DateTime or use SLOTS */
	o DateTime toBeDeliveredByDateTime

	// Quick 'n' Dirty: some password the receiving party must enter
	// Would be nice to stick this into an Asset only the shipper and/or delivery
	// owns. <-- TODO (or ensure this value is hashed & salted)
	o String arrivalPassword
	o DateTime arrivalDateTime optional
}

/* intially just a Trucker, legal logstics entities is not needed for prototype */
participant Trucker identified by truckerId {
	o String truckerId /* natural id: could also use driver's license nr? */
	o String firstName
	o String lastName
	
	o AdrTraining adrTraining

	o TruckerRating rating

	/* Job-Search criteria: */
	o TruckCapacityType truckCapacity

	// todo: get rid of first, then in a later iteration rework into JobRequests for the auto-bidding & notification stuff
    o TruckerAvailability availability
    o String[] allowedDestinations /* Ideally, an array of Destination's */
}

// Ideally we should be able to determine this at runtime, but CouchDb integration is not as rich as SQL, can't count Jobs
concept TruckerRating {
	// "Past Job" here means a Job that the Trucker accepted and is no longer active (delivered, cancelled, exception or w.e.)
	o Integer totalPastJobsAccepted default = 0 range =[0,]

	// Nr of jobs delivered successfully
	o Integer jobsDelivered default = 0 range = [0,]
}

/* Philipe: I think a free-form might be somewhat easier than sticking to Slots. The slots are basically implied by these values! */
concept TruckerAvailability {
    o DateTime from default = "1900-01-01"
    o DateTime to default = "1900-01-01"
}

concept Exception {
    o String details
    o DateTime time
}


participant ContainerGuy identified by containerGuyId {
	o String containerGuyId
	/* just a "name" suffices, a legal entity usually does not have First & Last name */
	o String name

	/* TODO:Contact information! */
}

/* Creates a new TruckerBid asset and adds it to bids on a ContainerJobOffer */
transaction BidOnContainerDeliveryJobOffer {
	o Integer bidAmount

	--> ContainerDeliveryJobOffer containerDeliveryJobOffer
	--> Trucker bidder
}

transaction AcceptBidOnContainerDeliveryJobOffer {
	--> TruckerBidOnContainerJobOffer acceptedBid
}

transaction CancelContainerDeliveryJobOffer {
	--> ContainerDeliveryJobOffer containerDeliveryJobOffer
}

transaction RaiseExceptionOnDeliveryJob {
	--> ContainerDeliveryJob containerDeliveryJob
	o Exception exception
}

transaction CreateContainerInfo {
	o String containerId
	o ContainerType containerType
	o ContainerSize containerSize
	--> ContainerGuy owner
}

transaction CreateContainerDeliveryJobOffer {
	--> ContainerInfo containerInfo

	o String terminalContainerAvailableAt
	o String destination

	o DateTime availableForPickupDateTime
	o DateTime toBeDeliveredByDateTime

	o AdrTraining requiredAdrTraining
}

transaction AcceptContainerDelivery {
	--> ContainerDeliveryJob job

	o String password
	o DateTime arrivalDateTime
}

transaction UpdateTruckerPreferences {
	--> Trucker trucker

	o TruckCapacityType truckCapacity
	o DateTime availableFrom
	o DateTime availableTo
    o String[] allowedDestinations 
}

transaction CancelBid {
	--> TruckerBidOnContainerJobOffer truckerBid
}

transaction test {
}