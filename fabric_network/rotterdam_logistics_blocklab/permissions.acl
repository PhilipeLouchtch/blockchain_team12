rule NetworkAdminUser {
	description: "Grant business network administrators full access to user resources"
	participant: "org.hyperledger.composer.system.NetworkAdmin"
	operation: ALL
	resource: "**"
	action: ALLOW
}

rule NetworkAdminSystem {
	description: "Grant business network administrators full access to system resources"
	participant: "org.hyperledger.composer.system.NetworkAdmin"
	operation: ALL
	resource: "org.hyperledger.composer.system.**"
	action: ALLOW
}

rule NetworkAccessTrucker {
	description: "Grant Truckers access to the network"
	participant: "nl.tudelft.blockchain.logistics.Trucker"
	operation: READ
	resource: "org.hyperledger.composer.system.Network#rotterdam_logistics_blocklab@**"
	action: ALLOW	
}

rule NetworkAccessContainerGuy {
	description: "Grant ContainerGuys access to the network"
	participant: "nl.tudelft.blockchain.logistics.ContainerGuy"
	operation: READ
	resource: "org.hyperledger.composer.system.Network#rotterdam_logistics_blocklab@**"
	action: ALLOW	
}

rule ContainerGuyCanViewHisDeliveryJobs {
	description: "ContainerGuyCanViewHisContainerDeliveryJobs"
	participant(r): "nl.tudelft.blockchain.logistics.ContainerGuy"
	operation: READ
	resource(c): "nl.tudelft.blockchain.logistics.TruckerBidOnContainerJobOffer"
	condition: (r == c.containerInfo.owner)
	action: ALLOW
}

rule TruckerCanBidOnContainerDeliveryJobOffers {
	description: "TruckerCanBidOnContainerDeliveryJobOffers"
	participant: "nl.tudelft.blockchain.logistics.Trucker"
	operation: UPDATE
	resource: "nl.tudelft.blockchain.logistics.ContainerDeliveryJobOffer"
	transaction: "nl.tudelft.blockchain.logistics.CancelContainerDeliveryJobOffer"
	action: ALLOW
}

/* TODO: in which phases/status of the containerJobOffer?  */
rule ContainerGuyCancelHisContainerDeliveryJob {
	description: "ContainerGuyCancelHisContainerDeliveryJob"
	participant(r): "nl.tudelft.blockchain.logistics.ContainerGuy"
	operation: UPDATE
	resource(c): "nl.tudelft.blockchain.logistics.ContainerDeliveryJobOffer"
	transaction(tx): "nl.tudelft.blockchain.logistics.CancelContainerDeliveryJobOffer"
	condition: (r == c.containerInfo.owner)
	action: ALLOW
}

/* TODO: is this the jobs after accepting, or merely his bid before accept/reject? */
rule TruckerCancelHisContainerDelivery {
	description: "TruckerCancelHisContainerDelivery"
	participant(r): "nl.tudelft.blockchain.logistics.Trucker"
	operation: UPDATE
	resource(c): "nl.tudelft.blockchain.logistics.ContainerDeliveryJobOffer"
	transaction: "nl.tudelft.blockchain.logistics.CancelContainerDeliveryJobOffer"
	condition: (r == c.acceptedBid.bidder)
	action: ALLOW
}

rule ContainerGuyCanCreateContainerInfo {
	description: "ContainerGuyCanCreateContainerInfo"
	participant: "nl.tudelft.blockchain.logistics.ContainerGuy"
	operation: CREATE
	resource: "nl.tudelft.blockchain.logistics.ContainerInfo"
	transaction: "nl.tudelft.blockchain.logistics.CreateContainerInfo"
	action: ALLOW
}

rule ContainerGuyCanCreateContainerDeliveryJobOffer {
	description: "ContainerGuyCanCreateContainerDelivery"
	participant: "nl.tudelft.blockchain.logistics.ContainerGuy"
	operation: CREATE
	resource: "nl.tudelft.blockchain.logistics.ContainerDeliveryJobOffer"
	transaction: "nl.tudelft.blockchain.logistics.CreateContainerDeliveryJobOffer"
	action: ALLOW
}